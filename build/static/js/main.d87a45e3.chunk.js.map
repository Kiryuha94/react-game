{"version":3,"sources":["components/Field/Field.js","components/Button/Button.js","components/Footer/Footer.js","components/Supplemented/Supplemented.js","pages/Main/Main.js","index.js"],"names":["Field","onClick","i","onCellClick","props","this","field","color","background","cellColor","className","map","value","index","style","PureComponent","Button","title","Footer","href","src","alt","Supplmented","useState","backgroundColor","setColor","cellBackgroundColor","setCellColor","zoom","setZoom","stateAudio","setAudio","onClose","defaultValue","type","onChange","e","target","min","max","step","checked","onClickOk","Main","XO","x","o","winnerCombination","isBot","state","isAudioActive","count","isNextMove","isFirstPlayerStarted","isTwoPlayer","isAutoPlay","isEvenMove","isFirstPlayerMove","audioO","play","audioX","setState","concat","checkCombination","onWin","every","v","onDraw","boteMove","autoplay","comb","a","b","c","showButtonNextRound","isPlay","isWin","win","hendlerSingle","Array","fill","firstPlayerWins","secondPlayerWins","visible","setTimeout","getIndexForBotMove","lines","check","symbol","line","winIndex","blockIndex","indexArr","reduce","acc","Math","floor","random","length","handlerTwoPerson","isFirstPlayerWin","audioWin","nextRaund","settings","showSetting","onCLickOk","addSettings","root","document","getElementById","htmlEl","querySelector","fontSize","reset","maybeState","localStorage","getItem","JSON","parse","urlX","urlO","urlWin","Audio","window","onbeforeunload","setItem","stringify","height","width","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d87a45e3.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\n\r\nclass Field extends PureComponent {\r\n  onClick = (i) => () => {\r\n    const { onCellClick } = this.props;\r\n    onCellClick(i);\r\n  };\r\n\r\n  render() {\r\n    const { field, cellColor } = this.props;\r\n    const color = { background: cellColor };\r\n    return (\r\n      <>\r\n        <div className=\"field\">\r\n          {field.map((value, index) => {\r\n            return (\r\n              <div style={color} key={index} className=\"sell\" onClick={this.onClick(index)}>\r\n                {value ? value : ''}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Field;\r\n","import React from 'react';\r\n\r\nconst Button = (props) => {\r\n  const { onClick, className } = props;\r\n\r\n  return <button className={className} onClick={onClick}>{props.title}</button>;\r\n};\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <span className=\"year\">2021</span>\r\n      <a className=\"link\" href=\"https://rs.school/js/\">\r\n        <img className=\"footer-img\" src=\"media/rs_school_js.svg\" alt=\"rs_school_js\" />\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import Button from 'components/Button';\r\nimport React, { useState } from 'react';\r\nconst Supplmented = (props) => {\r\n  const [color, setColor] = useState(props.backgroundColor);\r\n  const [cellColor, setCellColor] = useState(props.cellBackgroundColor);\r\n  const [zoom, setZoom] = useState(props.zoom);\r\n  const [stateAudio, setAudio] = useState(props.stateAudio);\r\n\r\n  const onChange = (e) => {\r\n    setColor(e.target.value);\r\n  };\r\n\r\n  const onChangeCell = (e) => {\r\n    setCellColor(e.target.value);\r\n  };\r\n\r\n  const onChangeZoom = (e) => {\r\n    setZoom(e.target.value);\r\n  };\r\n  const onChangeAudioState = (e) => {\r\n    setAudio(e.target.checked);\r\n  };\r\n\r\n  const onClose = () => {\r\n    props.onClose({\r\n      backgroundColor: color,\r\n      cellBackgroundColor: cellColor,\r\n      zoom,\r\n      stateAudio,\r\n    });\r\n  };\r\n\r\n  const onClickOk = () => {\r\n    props.onClickOk({ backgroundColor: color, cellBackgroundColor: cellColor, zoom, stateAudio });\r\n  };\r\n\r\n  return (\r\n    <div className=\"supplmented\">\r\n      <div>\r\n        <div onClick={onClose} className=\"close\">\r\n          +\r\n        </div>\r\n        <label>\r\n          Color background:\r\n          <input defaultValue={color} type=\"color\" onChange={onChange} />\r\n        </label>\r\n        <label>\r\n          Color cell:\r\n          <input defaultValue={cellColor} type=\"color\" onChange={onChangeCell} />\r\n        </label>\r\n        <label>\r\n          Setting zoom:\r\n          <input className=\"zoom\" type=\"range\" min=\"5\" max=\"21\" step=\"2\" value={zoom} onChange={onChangeZoom} />\r\n        </label>\r\n        <label>\r\n          Audio:\r\n          <input className=\"audio\" type=\"checkbox\" checked={stateAudio} onChange={onChangeAudioState} />\r\n        </label>\r\n        <Button onClick={onClickOk} title=\"OK\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Supplmented;\r\n","import React, { Component } from 'react';\r\nimport Field from 'components/Field';\r\nimport Button from 'components/Button';\r\nimport Loader from 'react-loader-spinner';\r\nimport Footer from 'components/Footer';\r\nimport Supplmented from 'components/Supplemented';\r\n\r\nclass Main extends Component {\r\n  XO = {\r\n    x: 'X',\r\n    o: 'O',\r\n  };\r\n\r\n  winnerCombination = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const maybeState = localStorage.getItem('state');\r\n    if (maybeState) {\r\n      const state = JSON.parse(maybeState);\r\n      this.state = state;\r\n    } else {\r\n      this.state = {\r\n        isTwoPlayer: null,\r\n        firstPlayerWins: 0,\r\n        secondPlayerWins: 0,\r\n        field: new Array(9).fill(null),\r\n        isNextMove: false,\r\n        count: 0,\r\n        isWin: false,\r\n        isPlay: false,\r\n        isFirstPlayerStarted: true,\r\n        win: '',\r\n        visible: false,\r\n        showButtonNextRound: false,\r\n        showSetting: false,\r\n        backgroundColor: '',\r\n        cellBackgroundColor: '',\r\n        zoom: '',\r\n        isAutoPlay: false,\r\n        isAudioActive: true,\r\n      };\r\n    }\r\n\r\n    this.urlX = 'media/audio/x.mp3';\r\n    this.urlO = 'media/audio/o.mp3';\r\n    this.urlWin = 'media/audio/win.mp3';\r\n    this.audioX = new Audio(this.urlX);\r\n    this.audioO = new Audio(this.urlO);\r\n    this.audioWin = new Audio(this.urlWin);\r\n\r\n    window.onbeforeunload = () => {\r\n      localStorage.setItem('state', JSON.stringify(this.state));\r\n    };\r\n    const { count, isFirstPlayerStarted, isTwoPlayer } = this.state;\r\n    const isEvenMove = !(count % 2);\r\n    const isFirstPlayerMove = isFirstPlayerStarted ? isEvenMove : !isEvenMove;\r\n    if (!isTwoPlayer && !isFirstPlayerMove) {\r\n      this.boteMove();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.onClose(this.state);\r\n    this.addSettings(this.state);\r\n  }\r\n  onCellClick = (i, isBot = false) => {\r\n    const { isAudioActive, count, field, isNextMove, isFirstPlayerStarted, isTwoPlayer, isAutoPlay } = this.state;\r\n\r\n    const isEvenMove = !(count % 2);\r\n    const isFirstPlayerMove = isFirstPlayerStarted ? !isEvenMove : isEvenMove;\r\n    if (field[i] !== null || (!isNextMove && !isBot)) return;\r\n\r\n    field[i] = count % 2 ? this.XO.o : this.XO.x;\r\n    if (isAudioActive) count % 2 ? this.audioO.play() : this.audioX.play();\r\n\r\n    this.setState({\r\n      field: [].concat(field),\r\n      count: count + 1,\r\n    });\r\n\r\n    if (this.checkCombination(field)) {\r\n      this.onWin(count);\r\n      return;\r\n    }\r\n\r\n    if (field.every((v) => v !== null)) {\r\n      this.onDraw();\r\n      return;\r\n    }\r\n\r\n    if (!isTwoPlayer && !isFirstPlayerMove) {\r\n      this.boteMove();\r\n    }\r\n\r\n    if (isAutoPlay) {\r\n      const isEvenMove = !(count % 2);\r\n      const isFirstPlayerMove = isFirstPlayerStarted ? isEvenMove : !isEvenMove;\r\n      if (!isFirstPlayerMove) {\r\n        this.autoplay();\r\n      }\r\n    }\r\n  };\r\n\r\n  checkCombination = (field) => {\r\n    for (const comb of this.winnerCombination) {\r\n      const [a, b, c] = comb;\r\n\r\n      if (field[a] && field[a] === field[b] && field[a] === field[c]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  onDraw = () => {\r\n    const { isAutoPlay } = this.state;\r\n    this.setState({\r\n      isAutoPlay: false,\r\n      showButtonNextRound: true,\r\n      isPlay: false,\r\n      isNextMove: false,\r\n      isWin: true,\r\n      win: 'Draw!',\r\n    });\r\n    if (!isAutoPlay) {\r\n      this.setState({ showButtonNextRound: false });\r\n    }\r\n  };\r\n\r\n  hendlerSingle = () => {\r\n    this.setState({\r\n      field: Array(9).fill(null),\r\n      isTwoPlayer: false,\r\n      isPlay: true,\r\n      isNextMove: true,\r\n      count: 0,\r\n      isWin: false,\r\n      firstPlayerWins: 0,\r\n      secondPlayerWins: 0,\r\n    });\r\n  };\r\n\r\n  boteMove = () => {\r\n    this.setState({ isNextMove: false, visible: true });\r\n    setTimeout(() => {\r\n      this.setState({ isNextMove: true, visible: false });\r\n      this.onCellClick(this.getIndexForBotMove(), true);\r\n    }, 2000);\r\n  };\r\n\r\n  autoplay = () => {\r\n    const { isWin, isAutoPlay, showButtonNextRound } = this.state;\r\n    this.setState({ isNextMove: false, visible: true, isAutoPlay: true, isWin: false });\r\n    setTimeout(() => {\r\n      this.setState({ visible: false, isAutoPlay: true });\r\n      this.onCellClick(this.getIndexForBotMove(), true);\r\n    }, 2000);\r\n    if (isWin) this.setState({ field: new Array(9).fill(null), count: 0 });\r\n  };\r\n\r\n  getIndexForBotMove = () => {\r\n    const { field, isFirstPlayerStarted } = this.state;\r\n\r\n    const lines = this.winnerCombination.map((comb) => {\r\n      return comb.map((index) => ({ index, value: field[index] }));\r\n    });\r\n\r\n    const check = (symbol) => {\r\n      for (const line of lines) {\r\n        if (line[0].value === symbol && line[1].value === symbol && line[2].value === null) {\r\n          return line[2].index;\r\n        }\r\n        if (line[0].value === symbol && line[2].value === symbol && line[1].value === null) {\r\n          return line[1].index;\r\n        }\r\n        if (line[1].value === symbol && line[2].value === symbol && line[0].value === null) {\r\n          return line[0].index;\r\n        }\r\n      }\r\n    };\r\n\r\n    const winIndex = check(isFirstPlayerStarted ? this.XO.o : this.XO.x);\r\n    if (winIndex) {\r\n      return winIndex;\r\n    }\r\n\r\n    const blockIndex = check(isFirstPlayerStarted ? this.XO.x : this.XO.o);\r\n    if (blockIndex) {\r\n      return blockIndex;\r\n    }\r\n\r\n    const indexArr = field.reduce((acc, v, i) => (v === null ? [...acc, i] : acc), []);\r\n    return indexArr[Math.floor(Math.random() * indexArr.length)];\r\n  };\r\n\r\n  handlerTwoPerson = () => {\r\n    this.setState({\r\n      field: Array(9).fill(null),\r\n      isTwoPlayer: true,\r\n      isPlay: true,\r\n      count: 0,\r\n      isNextMove: true,\r\n      isWin: false,\r\n      firstPlayerWins: 0,\r\n      secondPlayerWins: 0,\r\n    });\r\n  };\r\n\r\n  onWin = (count) => {\r\n    const {\r\n      isAutoPlay,\r\n      isWin,\r\n      firstPlayerWins,\r\n      secondPlayerWins,\r\n      isFirstPlayerStarted,\r\n      win,\r\n      showButtonNextRound,\r\n      isAudioActive,\r\n    } = this.state;\r\n    if (isAudioActive) this.audioWin.play();\r\n    let isFirstPlayerWin;\r\n    const isEvenMove = !(count % 2);\r\n\r\n    if (isFirstPlayerStarted) {\r\n      isFirstPlayerWin = isEvenMove;\r\n    } else {\r\n      isFirstPlayerWin = !isEvenMove;\r\n    }\r\n\r\n    this.setState({\r\n      isAutoPlay: false,\r\n      showButtonNextRound: true,\r\n      isWin: true,\r\n      isPlay: false,\r\n      isNextMove: false,\r\n      firstPlayerWins: isFirstPlayerWin ? firstPlayerWins + 1 : firstPlayerWins,\r\n      secondPlayerWins: isFirstPlayerWin ? secondPlayerWins : secondPlayerWins + 1,\r\n      win: `${isFirstPlayerWin ? 'First player WINS' : 'Second player WINS'}`,\r\n    });\r\n    if (isAutoPlay) {\r\n      this.setState({ showButtonNextRound: false });\r\n    }\r\n  };\r\n\r\n  nextRaund = () => {\r\n    const { isFirstPlayerStarted, isTwoPlayer, count, showButtonNextRound } = this.state;\r\n    this.setState({\r\n      showButtonNextRound: false,\r\n      field: Array(9).fill(null),\r\n      isNextMove: true,\r\n      isPlay: true,\r\n      count: 0,\r\n      isWin: false,\r\n      isFirstPlayerStarted: !isFirstPlayerStarted,\r\n    });\r\n\r\n    if (!isTwoPlayer && isFirstPlayerStarted) {\r\n      this.boteMove();\r\n    }\r\n  };\r\n\r\n  onClose = (settings) => {\r\n    this.setState({ ...settings, showSetting: false });\r\n  };\r\n\r\n  onCLickOk = (settings) => {\r\n    this.setState({ ...settings, showSetting: false });\r\n    this.addSettings(settings);\r\n  };\r\n  addSettings = ({ backgroundColor, zoom, stateAudio }) => {\r\n    const root = document.getElementById('root');\r\n    const htmlEl = document.querySelector('html');\r\n    root.style.background = backgroundColor;\r\n    htmlEl.style.fontSize = `${zoom}px`;\r\n    this.setState({ isAudioActive: stateAudio });\r\n  };\r\n\r\n  showSetting = () => {\r\n    this.setState({ showSetting: true });\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState(\r\n      {\r\n        isTwoPlayer: null,\r\n        firstPlayerWins: 0,\r\n        secondPlayerWins: 0,\r\n        field: new Array(9).fill(null),\r\n        isNextMove: false,\r\n        count: 0,\r\n        isWin: false,\r\n        isPlay: false,\r\n        isFirstPlayerStarted: true,\r\n        visible: false,\r\n        showButtonNextRound: false,\r\n        showSetting: false,\r\n        backgroundColor: '#8bccd8',\r\n        cellBackgroundColor: '',\r\n        zoom: 10,\r\n        isAutoPlay: false,\r\n        isAudioActive: true,\r\n      },\r\n      () => {\r\n        this.addSettings(this.state);\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isAutoPlay,\r\n      isPlay,\r\n      firstPlayerWins,\r\n      secondPlayerWins,\r\n      visible,\r\n      isWin,\r\n      showButtonNextRound,\r\n      count,\r\n      isFirstPlayerStarted,\r\n      isTwoPlayer,\r\n      showSetting,\r\n      backgroundColor,\r\n      cellBackgroundColor,\r\n      zoom,\r\n      stateAudio,\r\n    } = this.state;\r\n    const isEvenMove = !(count % 2);\r\n    const isFirstPlayerMove = isFirstPlayerStarted ? isEvenMove : !isEvenMove;\r\n    return (\r\n      <>\r\n        {showSetting && (\r\n          <div className=\"settings\">\r\n            <Supplmented\r\n              onClose={this.onClose}\r\n              onClickOk={this.onCLickOk}\r\n              cellBackgroundColor={cellBackgroundColor}\r\n              zoom={zoom}\r\n              backgroundColor={backgroundColor}\r\n              stateAudio={stateAudio}\r\n            />\r\n          </div>\r\n        )}\r\n        {isWin && <img className=\"icubovich\" src=\"media/Icubovich.png\" alt=\"Icubovich\" />}\r\n        <h1>Tic Tac Toe</h1>\r\n        {!isPlay && (\r\n          <div>\r\n            <Button onClick={this.showSetting} title=\"Setting designe\" />\r\n            <Button className=\"autoplay\" onClick={this.autoplay} title=\"Autoplay\" />\r\n          </div>\r\n        )}\r\n        {!isPlay && (\r\n          <Button\r\n            className={`${isTwoPlayer ? 'button-active' : ''}`}\r\n            onClick={this.handlerTwoPerson}\r\n            title=\"Play for 2 persons\"\r\n          />\r\n        )}\r\n        {!isPlay && (\r\n          <Button\r\n            className={`${isTwoPlayer === false ? 'button-active' : ''}`}\r\n            onClick={this.hendlerSingle}\r\n            title=\"Single play\"\r\n          />\r\n        )}\r\n        <h2 className=\"score\">\r\n          Score:\r\n          <label className={`${isFirstPlayerMove ? 'player-active' : ''}`}>{`Player: ${firstPlayerWins}`}</label>\r\n          <label className={`${isFirstPlayerMove ? '' : 'player-active'}`}>{`Player 2: ${secondPlayerWins}`}</label>\r\n        </h2>\r\n        {isWin && <p className=\"draw\">{this.state.win}</p>}\r\n        <div className={!visible ? 'hidden' : ''}>\r\n          <Loader type=\"ThreeDots\" color=\"yellow\" height={20} width={50} />\r\n        </div>\r\n        <Field onCellClick={this.onCellClick} field={this.state.field} cellColor={cellBackgroundColor} />\r\n        {showButtonNextRound && <Button onClick={this.nextRaund} title=\"Next round!\" />}\r\n        {!isAutoPlay && <Button onClick={this.reset} title=\"reset\" />}\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport Main from './pages/Main'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Main />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}